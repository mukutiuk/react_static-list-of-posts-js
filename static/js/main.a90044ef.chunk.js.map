{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","_ref","_ref$comment","comment","name","email","body","_jsxs","className","children","_jsx","href","concat","CommentList","comments","map","id","UserInfo","_ref$user","user","PostInfo","_ref$post","post","title","length","PostList","posts","postsFromServer","_objectSpread","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IACaA,EAAc,SAAHC,GAAA,IAAAC,EAAAD,EAAME,QAAWC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAI,OACxDC,eAAA,OAAKC,UAAU,cAAaC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CACjCC,cAAA,UAAQF,UAAU,oBAAmBC,SAAEL,IAEvCM,cAAA,QAAMF,UAAU,kBAAiBC,SAAC,OAElCC,cAAA,KACEF,UAAU,qBACVG,KAAI,UAAAC,OAAYP,GAAQI,SAEvBJ,OAILK,cAAA,OAAKF,UAAU,oBAAmBC,SAC/BH,MAEC,EChBKO,G,MAAc,SAAHZ,GAAA,IAAMa,EAAQb,EAARa,SAAQ,OACpCJ,cAAA,OAAKF,UAAU,cAAaC,SACzBK,EAASC,KAAI,SAAAZ,GAAO,OACnBO,cAACV,EAAW,CACVG,QAASA,GACJA,EAAQa,GACb,KAEA,GCTKC,G,MAAW,SAAHhB,GAAA,IAAAiB,EAAAjB,EAAMkB,KAAQf,EAAIc,EAAJd,KAAMC,EAAKa,EAALb,MAAK,OAC5CK,cAAA,KAAGF,UAAU,WAAWG,KAAI,UAAAC,OAAYP,GAAQI,SAC7CL,GACC,GCDOgB,G,MAAW,SAAHnB,GAAA,IAAAoB,EAAApB,EAAMqB,KAAQR,EAAQO,EAARP,SAAUS,EAAKF,EAALE,MAAOjB,EAAIe,EAAJf,KAAMa,EAAIE,EAAJF,KAAI,OAC5DZ,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACvBF,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,MAAIF,UAAU,kBAAiBC,SAC5Bc,IAGHhB,eAAA,KAAAE,SAAA,CACEC,cAAA,QAAMF,UAAU,qBAAoBC,SAAC,cAIpCU,GACCT,cAACO,EAAQ,CAACE,KAAMA,UAItBT,cAAA,KAAGF,UAAU,iBAAgBC,SAC1BH,IAGFQ,EAASU,OACRd,cAACG,EAAW,CAACC,SAAUA,IAEvBJ,cAAA,KAAG,UAAQ,oBAAmBD,SAAC,sBAE7B,GC5BKgB,EAAW,SAAHxB,GAAA,IAAMyB,EAAKzB,EAALyB,MAAK,OAC9BhB,cAAA,OAAKF,UAAU,WAAUC,SACtBiB,EAAMX,KAAI,SAAAO,GAAI,OACbZ,cAACU,EAAQ,CACPE,KAAMA,GACDA,EAAKN,GACV,KAEA,ECHFU,EAAQC,EAAgBZ,KAAI,SAAAO,GAAI,OAAAM,wBAAA,GACjCN,GAAI,IACPH,MAImBU,EAJDP,EAAKO,OAKhBC,EAAgBC,MAAK,SAAAZ,GAAI,OAAIA,EAAKH,KAAOa,CAAM,KAJtDf,UAOuBkB,EAPGV,EAAKN,GAQxBiB,EAAmBC,QAAO,SAAA/B,GAAO,OAAIA,EAAQ6B,SAAWA,CAAM,OADvE,IAAyBA,EAJJH,CAHe,IAW7B,IAAMM,EAAM,WAAH,OACd5B,eAAA,WAASC,UAAU,MAAKC,SAAA,CACtBC,cAAA,MAAIF,UAAU,aAAYC,SAAC,yBAC3BC,cAACe,EAAQ,CAACC,MAAOA,MACT,ECrBZU,IAASC,OACP3B,cAACyB,EAAG,IACJG,SAASC,eAAe,Q","file":"static/js/main.a90044ef.chunk.js","sourcesContent":["\nexport const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      <span className=\"CommentInfo__by\">by</span>\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: { comments, title, body, user } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        <span className=\"PostInfo__userName\">\n          Posted by\n        </span>\n\n        {user && (\n          <UserInfo user={user} />)}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length ? (\n      <CommentList comments={comments} />\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}